@page "/article/creation"

@inject HttpClient Http
@using BlazingBlog.Shared
@inject IStringLocalizer<Article_creation> Localizer

<h1>@Localizer["Creation"]</h1>

<EditForm class="form-article" OnValidSubmit="OnSubmit" Model="article">
    <DataAnnotationsValidator />
    <label for="inputTitle">@Localizer["Title"]</label>
        <InputText id="inputTitle" class="form-control" placeholder="Title" autofocus @bind-Value="@article.Title" />
    <ValidationMessage For="@(() => article.Title)"/>
    
    <label for="inputUrlImage">@Localizer["UrlImage"]</label>
        <InputText id="inputUrlImage" class="form-control" placeholder="UrlImage" autofocus @bind-Value="@article.PreviewImageURL" />
    <ValidationMessage For="@(() => article.PreviewImageURL)"/>

    <label for="inputPreviewTitle">@Localizer["Preview"]</label>
        <InputText id="inputPreviewTitle" class="form-control" placeholder="PreviewTitle" autofocus @bind-Value="@article.PreviewTitle" />
    <ValidationMessage For="@(() => article.PreviewTitle)"/>

    <label for="inputParagraph">@Localizer["Paragraph"]</label>
        <InputTextArea id="inputParagraph" class="form-control" placeholder="Paragraph" autofocus @bind-Value="@article.PreviewParagraph" />
    <ValidationMessage For="@(() => article.PreviewParagraph)"/>
 
    <div class="blazing-editor">
        <BlazEditor returnFunction="ValidateContent"/>
    </div>

    @if (Key != null) {
    <div>Votre clef est : @Key</div>
    }

    <button class="btn btn-lg btn-primary btn-block" type="submit">@Localizer["Add"]</button>

</EditForm>

@code {
    private Article article {get;set;} = new Article{Tags = new List<string>()};
    private string Key;
    
    string ValidateContent(string content)
    {
        return article.Content = content;
    }
    
    async Task OnSubmit() {
         var result = await Http.PostAsJsonAsync("api/Articles/CreateArticle", article);
         Key = await result.Content.ReadAsStringAsync();
    }
}