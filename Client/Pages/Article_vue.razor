@page "/article/vue"

@using Microsoft.AspNetCore.WebUtilities;
@using Newtonsoft.Json;
@using BlazingBlog.Shared


@inject HttpClient Http
@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager


@if(_article != null) {
    <h1 class="article-viewer-title">@_article.Title</h1>
}

@if (_render != null)
{
    <BlazeEditViewer @bind-Render="_render">
        <BlazEditParagraph Class="article-viewer-paragraph"/>
        <BlazEditImage ClassImageContainer="article-viewer-image-container" ClassImage="article-viewer-image"/>
        <BlazeEditHeader/>
        <BlazEditSpacer Content=@Spacer></BlazEditSpacer>
    </BlazeEditViewer>
}

@code {
    Uri _url;
    Article _article;
    private BlazingRender _render = null;

    private const string Spacer = "<div class=\"spacer\"></div>";

    protected override async Task OnAfterRenderAsync(bool firstRender) {
        if(firstRender) {
            _url = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
            if (QueryHelpers.ParseQuery(_url.Query).TryGetValue("Name", out var articleName)){
                
                _article = await Http.GetFromJsonAsync<Article>($"api/Articles/GetArticle?name={articleName}");
                Console.WriteLine(_article);
                await JsRuntime.InvokeVoidAsync("display", _article);
                if (_article != null)
                {
                    Console.WriteLine(_article.Content);
                    _render = JsonConvert.DeserializeObject<BlazingRender>(_article.Content);
                }
            }
            this.StateHasChanged();
        }
    }
}