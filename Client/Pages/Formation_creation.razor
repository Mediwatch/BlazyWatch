@page "/formations/creation"
@using BlazingBlog.Shared
@inject IJSRuntime JsRuntime;
@inject HttpClient Http;
@inject NavigationManager NavManager
@inject IStringLocalizer<Formation_creation> Localizer

<!--<AuthorizeView Roles="Admin, Tutor">-->
<div>
    <h1>@Localizer["Creation"]</h1>

    <p>@Localizer["Note"]</p>
    @if (_validation == 0 || _validation == 3)
    {
        <EditForm Model="@formTab1" OnValidSubmit="@PostFormation">
            <DataAnnotationsValidator />
            <table>
            <tr>
                <td><label for="Name">@Localizer["Name"]</label></td>
                <td>
                    <InputText id="Name" placeholder="Veuillez entrer un nom." @bind-Value="formTab1.Name" />
                </td>
            </tr>
            <tr>
                <td><label for="">@Localizer["Date"]</label></td>
                <td>
                    <InputDate id="startDate" @bind-Value="formTab1.StartDate" Min="2020-01-01" />
                    <p style="display: inline;">~</p>
                    <InputDate id="endDate" @bind-Value="formTab1.EndDate" Min="2020-01-01" />
                </td>
            </tr>
            <tr>
                <td><label for="Description">@Localizer["Description"]</label></td>
                <td>
                    <InputTextArea id="Description" placeholder="Veuillez entrer une description."
                        @bind-Value="formTab1.Description" Rows="10" Cols="50"></InputTextArea>
                </td>
            </tr>
            </table>
            @if (_validation == 0)
            {
                <button type="submit">@Localizer["Next"]</button>
            }
        </EditForm>
    }

    @if (_validation == 1 || _validation == 3)
    {
        <EditForm Model="@formTab2" OnValidSubmit="@PostFormation">
            <DataAnnotationsValidator />
            <table>
            <tr>
                <td><label for="Former">@Localizer["FName"]</label></td>
                <td>
                    <InputText id="Former" placeholder="Veuillez entrer un nom." @bind-Value="formTab2.Former" />
                </td>
            </tr>
            <tr>
                <td><label for="Price">@Localizer["Price"]</label></td>
                <td>
                    <InputNumber id="Price" @bind-Value="formTab2.Price" />
                </td>
            </tr>
            <tr>
                <td><label for="OrganizationName">@Localizer["OName"]</label></td>
                <td>
                    <InputText id="OrganizationName" placeholder="Veuillez entrer le nom de l'organisme."
                        @bind-Value="formTab2.OrganizationName" />
                </td>
            </tr>
            </table>
            @if (_validation == 1)
            {
                <button type="submit">@Localizer["Next"]</button>
            }
        </EditForm>
    }

    @if (_validation == 2 || _validation == 3)
    {
        <EditForm Model="@formTab3" OnValidSubmit="@PostFormation">
            <DataAnnotationsValidator />
            <table>
            <tr>
                <td><label for="Contact">@Localizer["Contact"]</label></td>
                <td>
                    <InputText id="Contact" placeholder="Veuillez entrer un contact." @bind-Value="formTab3.Contact" />
                </td>
            </tr>
            <tr>
                <td><label for="Location">@Localizer["Location"]</label></td>
                <td>
                    <InputText id="Location" placeholder="Veuillez entrer la localisation de la formation."
                        @bind-Value="formTab3.Location" />
                </td>
            </tr>
            </table>
            @if (_validation == 2)
            {
                <button type="submit">@Localizer["Submit"]</button>
            }
        </EditForm>
    }

    @if (_validation == 3)
    {
        <button type="submit" @onclick=@NoArticle>Valider la formation</button> 
        <button type="submit" @onclick=@PostFormation>Cr√©er un article et valider la formation</button>
    }

    @if(_validation == 4) {
        <EditForm class="form-article" OnValidSubmit="OnSubmit" Model="_article">
    <DataAnnotationsValidator />
    <label for="inputTitle">@Localizer["Title"]</label>
        <InputText id="inputTitle" class="form-control" placeholder="Title" autofocus @bind-Value="@_article.Title" />
    <ValidationMessage For="@(() => _article.Title)"/>
    
    <label for="inputUrlImage">@Localizer["UrlImage"]</label>
        <InputText id="inputUrlImage" class="form-control" placeholder="UrlImage" autofocus @bind-Value="@_article.PreviewImageURL" />
    <ValidationMessage For="@(() => _article.PreviewImageURL)"/>

    <label for="inputPreviewTitle">@Localizer["Preview"]</label>
        <InputText id="inputPreviewTitle" class="form-control" placeholder="PreviewTitle" autofocus @bind-Value="@_article.PreviewTitle" />
    <ValidationMessage For="@(() => _article.PreviewTitle)"/>

    <label for="inputParagraph">@Localizer["Paragraph"]</label>
        <InputTextArea id="inputParagraph" class="form-control" placeholder="Paragraph" autofocus @bind-Value="@_article.PreviewParagraph" />
    <ValidationMessage For="@(() => _article.PreviewParagraph)"/>
 
    <div class="blazing-editor">
        <BlazEditor returnFunction="ValidateContent"/>
    </div>

    <button class="btn btn-lg btn-primary btn-block" type="submit">@Localizer["Add"]</button>
    
    </EditForm>
    }

    @if (_validation == 5)
    {
        <p>@Localizer["SubmitSuccess"]</p>
        <button type="submit" @onclick=@PostFormation>@Localizer["CreateNew"]</button>
        <button type="submit" @onclick=@GoBack>@Localizer["Home"]</button>
    }
</div>

<!--</AuthorizeView>-->
@code
{
    public FormationTemplateTab1 formTab1 = new FormationTemplateTab1();
    public FormationTemplateTab2 formTab2 = new FormationTemplateTab2();
    public FormationTemplateTab3 formTab3 = new FormationTemplateTab3();
    private formation form = new formation();
    private int _validation = 0;

    private string _id = "NO_ID";

    public Article _article = new Article();
    
    string ValidateContent(string content)
    {
        return _article.Content = content;
    }
    
    async Task OnSubmit() {
        var test = (await Http.PostAsJsonAsync("api/Articles/CreateArticle", _article));
        _id = (await test.Content.ReadFromJsonAsync<Guid>()).ToString();
        _validation = 4;
        PostFormation();
    }

    protected override async Task OnInitializedAsync()
    {
        await JsRuntime.InvokeVoidAsync("display", _validation);
        _validation = 0;
    }

    private void NoArticle()
    {
        _validation++;
        PostFormation();
    }
    
    private async void PostFormation()
    {
        _validation++;

        if (_validation == 5)
        {
            form.Name = formTab1.Name;
            form.StartDate = formTab1.StartDate;
            form.EndDate = formTab1.EndDate;
            form.Description = formTab1.Description;
            form.OrganizationName = formTab2.OrganizationName;
            form.Price = formTab2.Price;
            form.Former = formTab2.Former;
            form.Location = formTab3.Location;
            form.Contact = formTab3.Contact;
            form.ArticleID = _id;
            await Http.PostAsJsonAsync("Formation", form);
            _validation = 0;
        }
    }

    private void GoBack()
    {
        _validation = 0;
        NavManager.NavigateTo("/");
    }
}