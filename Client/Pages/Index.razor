@page "/"
@inject HttpClient Client
@inject IJSRuntime JsRuntime
@inject IStringLocalizer<Index> Localizer
@inject NavigationManager NavManager

<main>
    @* <h1>@Localizer["WelcomeMessage"]</h1> *@
    <div class= "cards-container">
        <div>
            <div class= "presentation-card mid-color">
                <div class = "low-color presentation-card-triangle "/>
                <div class = "presentation-card-image-container">
                    <image src="images/palpatine.jpg"/>
                </div>
                <div class = "presentation-card-buton high-color" @onclick="navigateToArticle">@Localizer["FormationsInvite"]</div>
            </div>
        </div>
        @* <SharedComponent.LocalizationButton.LocalizationButton />
        <h2>@Localizer["Popular"]</h2> *@
        <div>
            <div class="little-cards-container">
                @if (_formations == null)
                {
                    <p>@Localizer["Unavaillable"]</p>
                }
                else
                {
                    int val = 0;
                    @foreach (var f in _formations)
                    {
                        if ((_info.isInDemo && val > 8) || (!_info.isInDemo && val < 8)){
                            continue;
                        }
                        <div @onclick="@(e => clickfunc("formations/" + f.id))">
                            @if (val++ % 2 == 0)
                            {
                                <div class="little-card  dark-color">
                                    <div class="little-card-image-container">
                                        <image src="images/palpatine.jpg" />
                                    </div>
                                    <div class="little-card-title low-color">
                                        <h3>@f.Name</h3>
                                        <h4>@f.Former, @f.OrganizationName</h4>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="little-card  high-color">
                                    <div class="little-card-image-container">
                                        <image src="images/palpatine.jpg" />
                                    </div>
                                    <div class="little-card-title mid-color">
                                        <h3>@f.Name</h3>
                                        <h4>@f.Former, @f.OrganizationName</h4>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</main>

@* <PaymentComponent price="0.01"></PaymentComponent> *@

@code {
    AdminInfo _info = null;
    string _article;
    private List<formation> _formations = null;

    protected override async Task OnInitializedAsync()
    {
        var test = await Client.GetFromJsonAsync<string[]>("/AdminManager/GetArctileNews") as string[];
        Console.WriteLine("hey :" + test);
        if (test != null)
            _article = test[0];
        _info = await Client.GetFromJsonAsync<AdminInfo>("/AdminManager/GetAdmin") as AdminInfo;
        _formations = await Client.GetFromJsonAsync<IEnumerable<formation>>("Formation") as List<formation>;
        await JsRuntime.InvokeVoidAsync("display", await Client.GetFromJsonAsync<IEnumerable<formation>>("Formation"));
    }

    private void clickfunc(string path) {
        NavManager.NavigateTo(path);
    }

    private void affichage_formation(int id)
    {
        JsRuntime.InvokeAsync<object>("open", "/formations/" + id.ToString(), "_blank");
    }

    private void navigateToArticle() {
        if (_article == null)
            return;
        NavManager.NavigateTo($"/article/vue?Name={_article}");
    }
}