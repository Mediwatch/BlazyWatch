@page "/"
@inject HttpClient Client
@inject IJSRuntime JsRuntime
@inject IStringLocalizer<Index> Localizer
@inject NavigationManager NavManager

<main>
    @* <h1>@Localizer["WelcomeMessage"]</h1> *@
    <div class= "cards-container">
      <div class="page-de-garde-header-container" >
        <image src="images/pagedegardedoctorHD.jpg"/>
        <div class="page-de-garde-header-search-formation-container">
          <div class="centered-header-container-box">
            <a class="btn btn-primary w-100 center-item" href="/formations/recherche" >@Localizer["Voir la liste des formations"]</a>
            @* <h4 class="center-item">ou</h4>
            <h3 class="center-item">Trouver une formation proche de chez moi</h3>
            <button class="btn btn-primary w-100 center-item" type="submit">@Localizer["Remplacer ça par search bar svp"]</button> *@
          </div>
        </div>
      </div>
    @*    <div>
            <div class= "presentation-card mid-color">
               <div class = "low-color presentation-card-triangle "/> 
                <div class = "presentation-card-image-container">
                    <image src="images/pagedegardedoctorHD.jpg"/>
                    <div class="presentation-card-triangles"></div>
                </div>
                <div class = "presentation-card-buton high-color">@Localizer["FormationsInvite"]</div>
            </div> 
        </div>*@
        @* <SharedComponent.LocalizationButton.LocalizationButton />
        <h2>@Localizer["Popular"]</h2> *@
        <div class="cards-container">
          <div class="little-cards-container">
            @if (_formations == null)
                {
                    <p>@Localizer["Unavaillable"]</p>
            }
            else
            {
              @foreach (var item in _square_formations.Select((f, idx) => new { idx, f }))
              {
              <div class="little-card" @onclick="@(e => clickfunc("formations/" + item.f.id))">
                <div class="little-card-image-container">
                  <img src=@("https://picsum.photos/468/28" + item.idx) />
                </div>
                <h3>@item.f.Name</h3>
                @*<div class="rating-box">
                  @* <embed class="rating-star-first" src="images/star.svg" type="" />
                  <embed class="rating-star" src="images/star.svg" type="" />
                  <embed class="rating-star" src="images/star.svg" type="" />
                  <embed class="rating-star" src="images/emptyStar.svg" type="" />
                  <embed class="rating-star" src="images/emptyStar.svg" type="" /> * @
                </div>*@
                <div class="former-icon">
                  <img src="https://picsum.photos/512/512") />
                </div>
                <div class="little-card-title">
                  <h4 class="former-and-hour">@item.f.Former | 12h</h4>
                  <h4>ㅤ</h4>
                  <h4 class="card-description">@item.f.Description</h4>
                </div>
              </div>
              }
            }

          </div>
        </div>
        <div class="separation-line">
          <div class="line-left"></div>
          <div class="text-more-details">
            <h4>Plus de Détails</h4>
          </div>
          <div class="line-right"></div>
        </div>
        <div class="details-container">
          <div class="details-left-container">
            <div class="image-detail-container-left">
              <image src="images/holdingphonewhite.jpg"/>
            </div>
            <div class="details-left-container-text-side">
              <h2>Pourquoi nous faire confiance ?</h2>
              <h4>Nous proposons les formations fournies par les organismes DPC mais de manière plus centralisée et intuitive</h4>
              <a class="btn btn-primary w-100 center-item" href="/formations/recherche">Voir les formations des organismes DPC</a>
            </div>
          </div>
          <div class="details-right-container">
            <div class="image-detail-container-right">
              <image src="images/holdingphoneblack.jpg"/>
            </div>
            <div class="details-right-container-text-side">
              <h2>Trouver une formation qui vous intéresse</h2>
              <h4>Découvrez toutes les formations autour de vous et qui vous intéressent</h4>
              <a class="btn btn-primary w-100 center-item" href="/formations/recherche">@Localizer["Voir la liste des formations"]</a>
            </div>
          </div>
        </div>
        <!--
        <div>
            <div class="little-cards-container">
                @if (_formations == null)
                {
                    <p>@Localizer["Unavaillable"]</p>
                }
                else
                {
                    int val = 0;
                    @foreach (var f in _formations)
                    {
                        <div @onclick="@(e => clickfunc("formations/" + f.id))">
                            @if (val++ % 2 == 0)
                            {
                                <div class="little-card  dark-color">
                                    <div class="little-card-image-container">
                                        <image src="images/palpatine.jpg" />
                                    </div>
                                    <div class="little-card-title low-color">
                                        <h3>@f.Name</h3>
                                        <h4>@f.Former, @f.OrganizationName</h4>
                                        @* <embed width="16" height="16" src="images/star.svg" type="" />
                                        <embed width="16" height="16" src="images/star.svg" type="" />
                                        <embed width="16" height="16" src="images/star.svg" type="" />
                                        <embed width="16" height="16" src="images/emptyStar.svg" type="" />
                                        <embed width="16" height="16" src="images/emptyStar.svg" type="" /> *@
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="little-card  high-color">
                                    <div class="little-card-image-container">
                                        <image src="images/palpatine.jpg" />
                                    </div>
                                    <div class="little-card-title mid-color">
                                        <h3>@f.Name</h3>
                                        <h4>@f.Former, @f.OrganizationName</h4>
                                        @* <embed width="16" height="16" src="images/star.svg" type="" />
                                        <embed width="16" height="16" src="images/star.svg" type="" />
                                        <embed width="16" height="16" src="images/star.svg" type="" />
                                        <embed width="16" height="16" src="images/emptyStar.svg" type="" />
                                        <embed width="16" height="16" src="images/emptyStar.svg" type="" /> *@
                                    </div>
                                </div>
                            }
                        </div>
                    }
                }
            </div>
        </div>
        -->
    </div>
</main>

@* <PaymentComponent price="0.01"></PaymentComponent> *@

@code {
    private List<formation> _formations = null;
      private List<formation> _square_formations = null;

    protected override async Task OnInitializedAsync()
    {
        _formations = await Client.GetFromJsonAsync<IEnumerable<formation>>("Formation") as List<formation>;
          _square_formations = _formations.Take(3).ToList();
        await JsRuntime.InvokeVoidAsync("display", await Client.GetFromJsonAsync<IEnumerable<formation>>("Formation"));
    }

    private void clickfunc(string path) {
        NavManager.NavigateTo(path);
    }

    private void affichage_formation(int id)
    {
        JsRuntime.InvokeAsync<object>("open", "/formations/" + id.ToString(), "_blank");
    }
}