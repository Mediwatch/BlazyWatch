@page "/register"
@* @layout LoginLayout *@
@inject NavigationManager navigationManager
@inject MediwatchAuthentifiacationProvider authStateProvider

<EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="registerForm">
    <DataAnnotationsValidator />
    <h4 class="font-weight-normal text-center">Créer un compte</h4>

    <label for="inputUsername" class="sr-only">Nom d'utilisateur</label>
    <InputText id="inputUsername" class="form-control" placeholder="Nom d'utilisateur" autofocus @bind-Value="@registerForm.UserName" />
    <ValidationMessage For="@(() => registerForm.UserName)" />

    <label for="inputEmail" class="sr-only">Email</label>
    <InputText id="inputEmail" class="form-control" placeholder="Email" autofocus @bind-Value="@registerForm.EmailAddress" />
    <ValidationMessage For="@(() => registerForm.EmailAddress)" />

    <label for="inputPassword" class="sr-only">Mot de passe</label>
    <InputText type="password" id="inputPassword" class="form-control" placeholder="Mot de passe" @bind-Value="@registerForm.Password" />
    <ValidationMessage For="@(() => registerForm.Password)" />

    <label for="inputPasswordConfirm" class="sr-only">Confirmation du mot de passe</label>
    <InputText type="password" id="inputPasswordConfirm" class="form-control" placeholder="Confirmation de mot de passe" @bind-Value="@registerForm.PasswordConfirm" />
    <ValidationMessage For="@(() => registerForm.PasswordConfirm)" />

    <button class="btn btn-lg btn-primary btn-block" type="submit">Créer un compte</button>

    <label class="text-danger">@error</label>
    <NavLink href="login">
        <h6 class="font-weight-normal text-center">Vous possédez déjà un compte ? Cliquez ici.</h6>
    </NavLink>

    <a class="btn btn-primary btn-lg text-center" href="Account/LoginExternal">Google</a>
</EditForm>

@functions
{
    RegisterForm registerForm { get; set; } = new RegisterForm();
		string error { get; set; }

		async Task OnSubmit()
		{
			error = null;
			try
			{
				await authStateProvider.Register(registerForm);
				navigationManager.NavigateTo("");
			}
			catch (Exception ex)
			{
				error = ex.Message;
			}
		}
}