@page "/utilisateur/calendrier"
@inject HttpClient client
@inject IJSRuntime JSRuntime

<div id="calendrier" class="dhx_cal_container" style='width:100%; height:100vh;'>
        <div class="dhx_cal_navline">
            <div class="dhx_cal_prev_button">&nbsp;</div>
            <div class="dhx_cal_next_button">&nbsp;</div>
            <div class="dhx_cal_today_button"></div>
            <div class="dhx_cal_date"></div>
            <div class="dhx_cal_tab" name="day_tab"></div>
            <div class="dhx_cal_tab" name="week_tab"></div>
            <div class="dhx_cal_tab" name="month_tab"></div>
        </div>
        <div class="dhx_cal_header"></div>
        <div class="dhx_cal_data"></div>
</div>
<p>&copy; <a href="https://dhtmlx.com/">dhtmlx</a></p>
<!--
<input type="checkbox" @onclick="@(e => SelectMine())" id="select-mine">
<label for="select-mine">Formations o√π je suis inscrit(e)</label>
-->

@code {
	class F {
		public F(formation formation, int idx) {
			this.f = formation;
			this.i = idx;
		}
		public formation f {get; set;}
		public int i {get; set;}
	};
	List<formation> formations = new List<formation>();
	protected override async void OnInitialized()
	{
		formations = await client.GetFromJsonAsync<IEnumerable<formation>>("Formation") as List<formation>;

		foreach (var (formation, idx) in formations.Select((value, i) => (value, i))) {
			await JSRuntime.InvokeVoidAsync("addDXCalendearEvent", new F(formation, idx), "blue");
		}
	}

	void SelectMine() {
		
	}
		
	async void export() {
		await JSRuntime.InvokeVoidAsync("exportDXCalendar");
	}
}