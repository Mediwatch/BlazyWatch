@page "/utilisateur/calendrier"
@inject HttpClient Client
@inject IJSRuntime JsRuntime

<form>
	<input type="submit" value="Exporter le calendrier" @onclick=@Export>
</form>
<div id="calendrier" class="dhx_cal_container" style='width:100%; height:100vh;'>
        <div class="dhx_cal_navline">
            <div class="dhx_cal_prev_button">&nbsp;</div>
            <div class="dhx_cal_next_button">&nbsp;</div>
            <div class="dhx_cal_today_button"></div>
            <div class="dhx_cal_date"></div>
            <div class="dhx_cal_tab" name="day_tab"></div>
            <div class="dhx_cal_tab" name="week_tab"></div>
            <div class="dhx_cal_tab" name="month_tab"></div>
        </div>
        <div class="dhx_cal_header"></div>
        <div class="dhx_cal_data"></div>
</div>
<p>&copy; <a href="https://dhtmlx.com/">dhtmlx</a></p>

@code {
	List<formation> _formations = new List<formation>();

	/*
	protected override async void OnInitialized()
	{
		await JSRuntime.InvokeVoidAsync("initDXCalendar");
		formations = await client.GetFromJsonAsync<IEnumerable<formation>>("Formation") as List<formation>;

		foreach (var f in formations) {
			await JSRuntime.InvokeVoidAsync("display", f);
			await JSRuntime.InvokeVoidAsync("addDXCalendarEvent", f, "blue");
		}
	}*/

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
    	if (firstRender)
    	{
        	await JsRuntime.InvokeVoidAsync("initDXCalendar");
			_formations = await Client.GetFromJsonAsync<IEnumerable<formation>>("Formation") as List<formation>;

			foreach (var f in _formations) {
				await JsRuntime.InvokeVoidAsync("display", f);
				await JsRuntime.InvokeVoidAsync("addDXCalendarEvent", f, "blue");
			}
    	}
	}

	void SelectMine() {
		
	}
		
	async void Export() {
		await JsRuntime.InvokeVoidAsync("exportDXCalendar");
	}
}