@using Microsoft.AspNetCore.WebUtilities;
@using Newtonsoft.Json;
@using BlazingEditor.BasicBlazeEditComponent;
@using BlazingBlog.Shared


@inject HttpClient Http


@if(article != null) {
    <h1 class="article-viewer-title">@article.Title</h1>
}

@if (render != null)
{
    <BlazeEditViewer @bind-Render="render">
        <BlazEditParagraph Class="article-viewer-paragraph"/>
        <BlazEditImage ClassImageContainer="article-viewer-image-container" ClassImage="article-viewer-image"/>
        <BlazeEditHeader/>
        <BlazEditSpacer Content=@spacer/>
    </BlazeEditViewer>
}

@code {
    System.Uri url;
    Article article;

    [Parameter]
    public string articleName {get;set;}
    public BlazingRender render = null;

    public string spacer = "<div class=\"spacer\"></div>";

    protected override async Task OnAfterRenderAsync(bool firstRender) {
        if(firstRender) {
           
                Console.WriteLine(articleName);
                article = await Http.GetFromJsonAsync<Article>($"api/Articles/GetArticle?name={articleName}");
                //Console.WriteLine(article.Content);
                render = JsonConvert.DeserializeObject<BlazingRender>(article.Content);
            
            this.StateHasChanged();
        }
        }
    }
}