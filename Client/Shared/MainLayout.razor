@inherits LayoutComponentBase
@inject HttpClient Client
@inject IJSRuntime JsRuntime
@inject MediwatchAuthentifiacationProvider AuthStateProvider


<header class="top-bar-header">
    <a class="top-bar-logo" href="#"> <img src="./ressources/2022_logo_Mediwatch.svg" alt="M"
            class="logo-in-text" />ediwatch </a>

    <div class="top-bar-dropbox">
                @if (Info == null || ! Info.IsAuthenticated) {
                    <a href="/utilisateur/connexion">Se connecter</a>
                } else if (Info.IsAuthenticated) {
                    <DropDownMenu DropDownButtonClass="high-color button">
                        <DropDownButton><div>Bienvenue @Info.UserName</div></DropDownButton>
                        <Content>
                            <a class="dropdown-item selected reload" href="/utilisateur/moi">Mes informations</a>
                            <br>
                            <a class="dropdown-item selected reload" href="/utilisateur/calendrier">Mon calendrier</a>
                            <AuthorizeView Roles="Admin, Tutor">
                                <hr>
                                <a class="dropdown-item selected reload" href="/article/creation">Créer un article</a>
                                <br>
                                <a class="dropdown-item selected reload" href="/formations/creation">Créer une formation</a>
                                <hr>
                            </AuthorizeView>
                            <AuthorizeView Roles="Admin">
                                <a class="dropdown-item selected reload" href="/Admin">Pannel Admin</a>
                            </AuthorizeView>
                            <a class="dropdown-item selected reload" href="/formations/recherche">Chercher une formation</a>
                            <hr>
                            <a class="dropdown-item selected reload" href="#" @onclick="Logout">Se déconnecter</a>
                        </Content>
                    </DropDownMenu>
                }
    </div>
</header>

<div class="container-fluid">
    <div class="row flex-xl-nowrap">
        <div class="main order-md-1">
            <div class="content px-4">
                @Body
            </div>
        </div>
    </div>
</div>

@code {
    public UserInformation Info = null;
    protected override async Task OnInitializedAsync()
    {
        Info = await Client.GetFromJsonAsync<UserInformation>("Account/UserInfo");
        //await JSRuntime.InvokeVoidAsync("display", info);
    }

    private async void Logout()
    {
        await AuthStateProvider.Logout();
        Info = await Client.GetFromJsonAsync<UserInformation>("Account/UserInfo");
        this.StateHasChanged();
    }
}