/*********************************************************
       Code Generated By  .  .  .  .  Delaney's Script Bot
       WWW .  .  .  .  .  .  .  .  .  www.scriptbot.io
       Version.  .  .  .  .  .  .  .  10.0.0.14 
       Build  .  .  .  .  .  .  .  .  20191113 216
       Template Name.  .  .  .  .  .  Project Green 2.0
       Template Version.  .  .  .  .  20191030 002
       Author .  .  .  .  .  .  .  .  Delaney

                      ,        ,--,_
                       \ _ ___/ /\|
                       ( )__, )
                      |/_  '--,
                        \ `  / '
 
 Note: Do not send this object to the view.
       Use objects create from Models classes instead.
       This class in a representation of data objects.
 
 *********************************************************/
using System;
using System.ComponentModel;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace Services.Data.Core.Domain
{
    [XmlType(Namespace = "")]
    public partial class Invoice : Services.Data.Core.Domain.Abstract
    {
        public Invoice()
        {
            _createdDate = System.DateTime.Now;
        }
        #region Properties
        /// <summary>
        /// Primary Key
        /// </summary>
        public int? Id { get; set; }

        #region Address 1
        private string _address1 = "";
        public string Address1
        {
            get
            {
                return _address1;
            }
            set
            {
                if(value != null)
                    value = value.Trim();

                if (_address1 != value)
                {
                    _address1 = value;
                    IsSaved = false;
                }
            }
        }
        #endregion

        #region Address 2
        private string _address2 = "";
        public string Address2
        {
            get
            {
                return _address2;
            }
            set
            {
                if(value != null)
                    value = value.Trim();

                if (_address2 != value)
                {
                    _address2 = value;
                    IsSaved = false;
                }
            }
        }
        #endregion

        #region Address 3
        private string _address3 = "";
        public string Address3
        {
            get
            {
                return _address3;
            }
            set
            {
                if(value != null)
                    value = value.Trim();

                if (_address3 != value)
                {
                    _address3 = value;
                    IsSaved = false;
                }
            }
        }
        #endregion

        #region Address 4
        private string _address4 = "";
        public string Address4
        {
            get
            {
                return _address4;
            }
            set
            {
                if(value != null)
                    value = value.Trim();

                if (_address4 != value)
                {
                    _address4 = value;
                    IsSaved = false;
                }
            }
        }
        #endregion

        #region Address 5
        private string _address5 = "";
        public string Address5
        {
            get
            {
                return _address5;
            }
            set
            {
                if(value != null)
                    value = value.Trim();

                if (_address5 != value)
                {
                    _address5 = value;
                    IsSaved = false;
                }
            }
        }
        #endregion

        #region Country Code
        private string _countryCode = "";
        public string CountryCode
        {
            get
            {
                return _countryCode;
            }
            set
            {
                if(value != null)
                    value = value.Trim();

                if (_countryCode != value)
                {
                    _countryCode = value;
                    IsSaved = false;
                }
            }
        }
        #endregion

        #region Email
        private string _email = "";
        public string Email
        {
            get
            {
                return _email;
            }
            set
            {
                if(value != null)
                    value = value.Trim();

                if (_email != value)
                {
                    _email = value;
                    IsSaved = false;
                }
            }
        }
        #endregion

        #region First Name
        private string _firstName = "";
        public string FirstName
        {
            get
            {
                return _firstName;
            }
            set
            {
                if(value != null)
                    value = value.Trim();

                if (_firstName != value)
                {
                    _firstName = value;
                    IsSaved = false;
                }
            }
        }
        #endregion

        #region Last Name
        private string _lastName = "";
        public string LastName
        {
            get
            {
                return _lastName;
            }
            set
            {
                if(value != null)
                    value = value.Trim();

                if (_lastName != value)
                {
                    _lastName = value;
                    IsSaved = false;
                }
            }
        }
        #endregion

        #region Middle Name
        private string _middleName = "";
        public string MiddleName
        {
            get
            {
                return _middleName;
            }
            set
            {
                if(value != null)
                    value = value.Trim();

                if (_middleName != value)
                {
                    _middleName = value;
                    IsSaved = false;
                }
            }
        }
        #endregion

        #region Number
        private int _number;
        public int Number
        {
            get
            {
                return _number;
            }
            set
            {
                if (_number != value)
                {
                    _number = value;
                    IsSaved = false;
                }
            }
        }
        #endregion

        #region PayPal Order ID
        private string _payPalOrderId = "";
        public string PayPalOrderId
        {
            get
            {
                return _payPalOrderId;
            }
            set
            {
                if(value != null)
                    value = value.Trim();

                if (_payPalOrderId != value)
                {
                    _payPalOrderId = value;
                    IsSaved = false;
                }
            }
        }
        #endregion

        #region PayPal Order ID
        private string _payPalPayerId = "";
        public string PayPalPayerId
        {
            get
            {
                return _payPalPayerId;
            }
            set
            {
                if(value != null)
                    value = value.Trim();

                if (_payPalPayerId != value)
                {
                    _payPalPayerId = value;
                    IsSaved = false;
                }
            }
        }
        #endregion

        #region Post Code
        private string _postCode = "";
        public string PostCode
        {
            get
            {
                return _postCode;
            }
            set
            {
                if(value != null)
                    value = value.Trim();

                if (_postCode != value)
                {
                    _postCode = value;
                    IsSaved = false;
                }
            }
        }
        #endregion

        #region Prefix
        private string _prefix = "";
        public string Prefix
        {
            get
            {
                return _prefix;
            }
            set
            {
                if(value != null)
                    value = value.Trim();

                if (_prefix != value)
                {
                    _prefix = value;
                    IsSaved = false;
                }
            }
        }
        #endregion

        #region Suffix
        private string _suffix = "";
        public string Suffix
        {
            get
            {
                return _suffix;
            }
            set
            {
                if(value != null)
                    value = value.Trim();

                if (_suffix != value)
                {
                    _suffix = value;
                    IsSaved = false;
                }
            }
        }
        #endregion

        #region Fullname Property
        public string Fullname
        {
            get
            {
                string s = FirstName;
                if (!string.IsNullOrEmpty(s)
                && !string.IsNullOrEmpty(LastName))
                    s += " ";

                s += LastName ?? "";

                return s;
            }
        }
        #endregion
        #endregion
        
        #region Methods
        public override void Update(Abstract entity)
        {
            var invoice = (Invoice)entity;

            Address1 = invoice.Address1;
            Address2 = invoice.Address2;
            Address3 = invoice.Address3;
            Address4 = invoice.Address4;
            Address5 = invoice.Address5;
            CountryCode = invoice.CountryCode;
            Email = invoice.Email;
            FirstName = invoice.FirstName;
            LastName = invoice.LastName;
            MiddleName = invoice.MiddleName;
            Number = invoice.Number;
            PayPalOrderId = invoice.PayPalOrderId;
            PayPalPayerId = invoice.PayPalPayerId;
            PostCode = invoice.PostCode;
            Prefix = invoice.Prefix;
            Suffix = invoice.Suffix;
        }
        public override string ToString()
        {
            return Fullname;
        }
        #endregion
    }
}