/*********************************************************
       Code Generated By  .  .  .  .  Delaney's Script Bot
       WWW .  .  .  .  .  .  .  .  .  www.scriptbot.io
       Version.  .  .  .  .  .  .  .  10.0.0.14 
       Build  .  .  .  .  .  .  .  .  20191113 216
       Template Name.  .  .  .  .  .  Mosh (Repository EF)
       Template Version.  .  .  .  .  20191011 001
       Author .  .  .  .  .  .  .  .  Delaney

                          .___,
                       ___('v')___
                       `"-\._./-"'
                           ^ ^

*********************************************************/

using System;
using System.Collections.Generic;
using System.Linq.Expressions;

namespace Services.Data.Core.Repositories
{
    public partial interface IFormationRepository
    {
        bool IncludeDeleted { get; set; }
        Domain.FormationPaypal Get(int? id);

        Domain.FormationPaypal SingleOrDefault(Func<Domain.FormationPaypal, bool> predicate);

        bool Add(Domain.FormationPaypal entity);
        bool AddRange(IEnumerable<Domain.FormationPaypal> entities);

        IEnumerable<Domain.FormationPaypal> GetAll(); 
        IEnumerable<Domain.FormationPaypal> Find(Func<Domain.FormationPaypal, bool> predicate);

        /// <summary>
        /// Get the parent Formation for product and assign it the product.{parent class pascal}.
        /// </summary>
        void Get(Domain.Product product);

        /// <summary>
        /// Get the parent Formation for the collection of products and assign it the product.Backet.
        /// </summary>
        void Get(IEnumerable<Domain.Product> products);
        Domain.FormationPaypal GetWithParents(int id);
        Domain.FormationPaypal GetWithChildren(int id);
        Domain.FormationPaypal GetWithFamily(int id);
        DataStoreResult Remove(int Id,
                               out string errorMessage);

        DataStoreResult Remove(Domain.FormationPaypal entity,
                               out string errorMessage);

        DataStoreResult RemoveRange(IEnumerable<Domain.FormationPaypal> entities,
                                    out string errorMessage);
    }
}